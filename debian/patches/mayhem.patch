Author: Andreas Tille <tille@debian.org>
Last-Update: Wed, 23 Dec 2015 21:52:21 +0100
Bug-Debian: https://bugs.debian.org/716141
Description: Fix Mayhem issue (if only upstream would use getopt ...)

--- a/jpeg.c
+++ b/jpeg.c
@@ -149,8 +151,14 @@ int main(argc,argv)
     {
       if (!strcmp(argv[i],"-JFIF"))
 	CImage->Jfif=1;
-      else if (!strcmp(argv[i],"-ci"))
+      else if (!strcmp(argv[i],"-ci")) {
+	if ( argc <= 2 ) {
+          fprintf(stderr, "Missing required parameter ComponentIndex1 for option -ci\n");
+          Help();
+          exit(-1);
+        }
 	ComponentIndex=atoi(argv[++i]);
+      }
       else if (*(argv[i]) == '-')       /* Strip off first "dash" */
  	{
  	  switch(*(++argv[i]))
@@ -174,11 +182,21 @@ int main(argc,argv)
 	    case 'f':
  	      switch(*(++argv[i]))
  		{
- 		case 'w':                 /* -fw Frame width */
+  		case 'w':                 /* -fw Frame width */
+		  if ( argc <= 2 ) {
+		    fprintf(stderr, "Missing required parameter FrameWidth1 for option -fw\n");
+		    Help();
+		    exit(-1);
+		  }
  		  CFrame->Width[ComponentIndex] =
 		    atoi(argv[++i]);
 		  break;
 		case 'h':                 /* -fh Frame height */
+                  if ( argc <= 2 ) {
+                    fprintf(stderr, "Missing required parameter FrameHeight1 for option -fh\n");
+                    Help();
+                    exit(-1);
+                  }
 		  CFrame->Height[ComponentIndex] =
 		    atoi(argv[++i]);
 		  break;
@@ -194,9 +212,19 @@ int main(argc,argv)
 	      switch(*(++argv[i]))
 		{
 		case 'w':                /* -iw Image width */
+                  if ( argc <= 2 ) {
+                    fprintf(stderr, "Missing required parameter ImageWidth for option -iw\n");
+                    Help();
+                    exit(-1);
+                  }
 		  CFrame->GlobalWidth = atoi(argv[++i]);
 		  break;
 		case 'h':                /* -ih Image height */
+                  if ( argc <= 2 ) {
+                    fprintf(stderr, "Missing required parameter ImageHeight for option -ih\n");
+                    Help();
+                    exit(-1);
+                  }
 		  CFrame->GlobalHeight = atoi(argv[++i]);
 		  break;
 		default:
@@ -208,11 +236,21 @@ int main(argc,argv)
 		}
 	      break;
 	    case 'h':                    /* -h horizontal frequency */
+              if ( argc <= 2 ) {
+                fprintf(stderr, "Missing required parameter HorizontalFrequency for option -hf\n");
+                Help();
+                exit(-1);
+              }
 	      CFrame->hf[ComponentIndex] =
 		atoi(argv[++i]);
 	      break;
 #ifndef PRODUCTION_VERSION
 	    case 'l':                    /* -l loudness for debugging */
+              if ( argc <= 2 ) {
+                fprintf(stderr, "Missing required parameter for option -l\n");
+                Help();
+                exit(-1);
+              }
 	      Loud = atoi(argv[++i]);
 	      break;
 #endif
@@ -223,29 +261,64 @@ int main(argc,argv)
 	      CImage->OutPGM = 1;
 	      break;
 	    case 'o':                    /* -o outfile */
+              if ( argc <= 2 ) {
+                fprintf(stderr, "Missing required parameter OutBaseName for option -o\n");
+                Help();
+                exit(-1);
+              }
 	      CImage->OutBaseName = argv[++i];
 	      break;
 	    case 'O':                    /* -o Oracle mode (input parsing)*/
 	      Oracle=1;
 	      break;
 	    case 'p':
+              if ( argc <= 2 ) {
+                fprintf(stderr, "Missing required parameter PrecisionValue for option -p\n");
+                Help();
+                exit(-1);
+              }
 	      CFrame->DataPrecision = atoi(argv[++i]);
 	      if (!CFrame->Type) CFrame->Type = 1;
 	      break;
 	    case 'r':                    /* -r resynchronization */
+              if ( argc <= 2 ) {
+                fprintf(stderr, "Missing required parameter ResyncInterval for option -r\n");
+                Help();
+                exit(-1);
+              }
 	      CFrame->ResyncInterval = atoi(argv[++i]);
 	      break;
 	    case 'q':                    /* -q Q factor */
 	      if (*(++argv[i])=='l') LargeQ=1;
+              if ( argc <= 2 ) {
+                fprintf(stderr, "Missing required parameter Q-Factor for option -q\n");
+                Help();
+                exit(-1);
+              }
 	      CFrame->Q = atoi(argv[++i]);
 	      break;
 	    case 'v':                    /* -v vertical frequency */
+              if ( argc <= 2 ) {
+                fprintf(stderr, "Missing required parameter VerticalFrequency for option -vf\n");
+                Help();
+                exit(-1);
+              }
 	      CFrame->vf[ComponentIndex] = atoi(argv[++i]);
 	      break;
 	    case 's':                    /* -s stream file name */
+              if ( argc <= 2 ) {
+                fprintf(stderr, "Missing required parameter StreamName for option -s\n");
+                Help();
+                exit(-1);
+              }
 	      CImage->StreamFileName = argv[++i];
 	      break;
 	    case 't':
+              if ( argc <= 2 ) {
+                fprintf(stderr, "Missing required parameter pointtransform for option -t\n");
+                Help();
+                exit(-1);
+              }
 	      PointTransform=atoi(argv[++i]);
 	      break;
 #ifndef PRODUCTION_VERSION
